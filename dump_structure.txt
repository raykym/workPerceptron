#dump data structure
# hash data key 'layer_init' 'waits' 'bias' 'learn_rate'
# layerdata->{layer}->{node} 
# waitsdump: waits data to node refARRAY
# layer_init: layer_init set data
# bias: need set for perceptron
# learn_rate: extra data
$VAR1 = {
          'DateTime' => '1680622543.32144',
          'waits' => {
                       '2' => {
                                '0' => [
                                         '0.736887910749019',
                                         '0.135378407081557',
                                         '0.997975373384371'
                                       ]
                              },
                       '1' => {
                                '1' => [
                                         '0.459775306633063',
                                         '0.161884760643087',
                                         '0.241978758109489'
                                       ],
                                '2' => [
                                         '0.806617747626291',
                                         '0.143877169868357',
                                         '0.0805197061946004'
                                       ],
                                '0' => [
                                         '0.604498191079358',
                                         '0.0663208547440313',
                                         '0.0640619934097586'
                                       ]
                              },
                       '0' => {
                                '1' => [
                                         '0.113828199326242',
                                         '0.0563272800981345'
                                       ],
                                '2' => [
                                         '0.688486707799395',
                                         '0.293405683364789'
                                       ],
                                '0' => [
                                         '0.28177747172214',
                                         '0.44895482378891'
                                       ]
                              }
                     },
          'learn_rate' => {
                            '2' => {
                                     '0' => '0.0001'
                                   },
                            '1' => {
                                     '1' => '0.0001',
                                     '2' => '0.0001',
                                     '0' => '0.0001'
                                   },
                            '0' => {
                                     '0' => '0.0001',
                                     '2' => '0.0001',
                                     '1' => '0.0001'
                                   }
                          },
          'bias' => {
                      '0' => {
                               '0' => '0.554341499996045',
                               '2' => '0.388191489181026',
                               '1' => '0.223727111899774'
                             },
                      '1' => {
                               '0' => '0.293615093443997',
                               '2' => '-0.143017424846114',
                               '1' => '0.420825424837896'
                             },
                      '2' => {
                               '0' => '0.15417392362219'
                             }
                    },
          'layer_init' => {
                            'optimaizer' => 'None',
                            'learn_rate' => '0.0001',
                            'layer_act_func' => [
                                                  'Sigmoid',
                                                  'Sigmoid',
                                                  'None'
                                                ],
                            'input_count' => 1,
                            'layer_member' => [
                                                2,
                                                2,
                                                0
                                              ]
                          }
        };
